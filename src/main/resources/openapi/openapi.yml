openapi: 3.0.1
info:
  title: Check Love API
  description: Check Love 앱을 위한 API 명세서
  version: v1.0.0
  license:
    name: Apache 2.0
    url: http://springdoc.org

servers:
  - url: http://localhost:8080
    description: 개발 서버

tags:
  - name: user
    description: 사용자 관련 API (프로필, 팔로우 등)
  - name: auth
    description: 인증 관련 API (로그인, 회원가입, 토큰 등)
  - name: matching
    description: 매칭 관련 API (좋아요, 매칭 등)
  - name: message
    description: 메시지 관련 API (채팅, 메시지 등)

paths:
  # 인증 API 경로
  /api/auth/login:
    $ref: "./paths/auth.yml#/auth_login"
  /api/auth/register:
    $ref: "./paths/auth.yml#/auth_register"
  /api/auth/logout:
    $ref: "./paths/auth.yml#/auth_logout"
  /api/auth/refresh:
    $ref: "./paths/auth.yml#/auth_refresh"
  /api/auth/password/reset:
    $ref: "./paths/auth.yml#/auth_password_reset"
  /api/auth/me:
    $ref: "./paths/auth.yml#/auth_me"
  /api/auth/state:
    $ref: "./paths/auth.yml#/auth_state"

components:
  schemas:
    CommonResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    PaginationResponse:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
        totalPages:
          type: integer

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    UserResponse:
      $ref: "./schemas/user.yml#/UserResponse"

    UserProfileResponse:
      $ref: "./schemas/user.yml#/UserProfileResponse"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 인증 토큰. 'Bearer {token}' 형식으로 전송합니다.
